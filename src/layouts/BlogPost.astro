---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, publishedAt, updatedAt, heroImage, tags } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
	</head>
  <body class="min-h-screen bg-base-950">
    <div class="flex flex-col max-w-7xl mx-auto justify-between min-h-screen">
      <Header />
      <main class="flex-1">
        <article class="
          px-4
          prose
          max-w-none
          prose-invert
          prose-sm
          md:prose-base
          lg:prose-lg
          prose-pre:shadow-xl
          prose-h1:text-orange-200
          prose-h2:text-orange-200
          prose-h3:text-orange-200
          prose-h4:text-orange-200
          prose-p:text-base-300">
          <div>
            {heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
          </div>
          <div>
            <div>
              <FormattedDate date={publishedAt} />
              {
                updatedAt && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedAt} />
                  </div>
                )
              }
            </div>
            <h1 class="text-orange-100">{title}</h1>
            <div class="flex flex-wrap gap-2">
              {tags && tags.map((tag) => (
                <span class="inline-flex items-center rounded-md bg-orange-700/10 px-2 py-1 text-xs font-medium text-orange-700 ring-1 ring-inset ring-orange-700/20">
                  {tag}
                </span>
              ))}
            </div>
            <hr />
          </div>
          <slot/>
        </article>
      </main>
      <Footer/>
    </div>
	</body>
</html>
